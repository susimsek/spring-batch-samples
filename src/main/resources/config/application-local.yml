spring:
  batch:
    jdbc:
      initialize-schema: embedded
      platform: h2
    job:
      enabled: true
      name: postInfoJob
  datasource:
    url: jdbc:h2:mem:sample;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS Schema
    username: sa
    password: password
    driver-class-name: org.h2.Driver
    hikari:
      maximum-pool-size: 30
      minimum-idle: 1
      hikari:
        poolName: Hikari
        auto-commit: false
  jpa:
    defer-datasource-initialization: true
    show-sql: true
    properties:
      hibernate.cache.redisson.entity.expiration.time_to_live: 3600000
  kafka:
    bootstrap-servers: glider.srvs.cloudkafka.com:9094
    properties:
      enable:
        idempotence: false
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: SCRAM-SHA-512
        jaas:
          config: org.apache.kafka.common.security.scram.ScramLoginModule required username="xdiinweb" password="2-WUg78AseKMdQgzvBCtZ73DjVSCaRvX";
    template:
      default-topic: xdiinweb-posts
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: xdiinweb-posts
      heartbeat-interval: 3000ms
      max-poll-records: 500
      properties:
        spring.json.trusted.packages: 'io.github.susimsek.springbatchsamples.model'
    redis:
      host: localhost
      port: 6379
cron:
  expression:
    post-info: '*/10 * * * * *'

logging:
  level:
    ROOT: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.cache: DEBUG
    io.github.susimsek.springbatchsamples: DEBUG

cache:
  redis:
    server: redis://redis-10330.c15.us-east-1-4.ec2.cloud.redislabs.com:10330
    cluster: false
    password: 5mbm3tZYp3GEdSciPQdHJ5eFN7y4Frqs